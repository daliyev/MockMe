# Generated by Django 5.0.2 on 2024-07-26 16:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpecialSubject',
            fields=[
                ('subject_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Majburiy Fan',
                'verbose_name_plural': 'Majburiy Fanlar',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Fan',
                'verbose_name_plural': 'Fanlar',
            },
        ),
        migrations.CreateModel(
            name='SpecialSubjectQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_no', models.PositiveIntegerField()),
                ('text', models.TextField()),
                ('subject_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_questions', to='dtmtests.specialsubject')),
            ],
            options={
                'verbose_name': 'Test savol',
                'verbose_name_plural': 'Majburiy Test savollari',
            },
        ),
        migrations.CreateModel(
            name='SpecialQuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_answer', models.BooleanField(default=False)),
                ('text', models.TextField()),
                ('question_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_options', to='dtmtests.specialsubjectquestion')),
            ],
            options={
                'verbose_name': 'Variant',
                'verbose_name_plural': 'Majburiy Javob variantlari',
            },
        ),
        migrations.CreateModel(
            name='SpecialSubjectTest',
            fields=[
                ('test_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('questions', models.ManyToManyField(blank=True, to='dtmtests.specialsubjectquestion')),
                ('subject_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtmtests.specialsubject')),
            ],
            options={
                'verbose_name': 'Majburiy Test',
                'verbose_name_plural': "Majburiy Yo'nalish test",
            },
        ),
        migrations.CreateModel(
            name='dtmtests',
            fields=[
                ('dtmtest_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('sp_subjeccttest', models.ManyToManyField(related_name='sp_subjecttest', to='dtmtests.specialsubjecttest')),
            ],
            options={
                'verbose_name': 'DTM test',
                'verbose_name_plural': 'DTM testlar blok',
            },
        ),
        migrations.CreateModel(
            name='StudentTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.FloatField(default=0)),
                ('date', models.DateField()),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='accounts.accountsmodel')),
                ('test_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dtmtest', to='dtmtests.dtmtests')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_no', models.PositiveIntegerField()),
                ('text', models.TextField()),
                ('subject_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='dtmtests.subject')),
            ],
            options={
                'verbose_name': 'Test savol',
                'verbose_name_plural': 'Test savollari',
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_answer', models.BooleanField(default=False)),
                ('text', models.TextField()),
                ('question_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='dtmtests.subjectquestion')),
            ],
            options={
                'verbose_name': 'Variant',
                'verbose_name_plural': 'Javob variantlari',
            },
        ),
        migrations.CreateModel(
            name='SubjectTest',
            fields=[
                ('test_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('questions', models.ManyToManyField(blank=True, related_name='subject_question', to='dtmtests.subjectquestion')),
                ('subject_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dtmtests.subject')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': "Yo'nalish test",
            },
        ),
        migrations.AddField(
            model_name='dtmtests',
            name='subjecttest',
            field=models.ManyToManyField(related_name='subjecttest', to='dtmtests.subjecttest'),
        ),
    ]
